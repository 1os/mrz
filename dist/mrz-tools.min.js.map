{"version":3,"sources":["webpack:///mrz-tools/webpack/universalModuleDefinition","webpack:///mrz-tools/webpack/bootstrap 8735a93e0a6644039b71","webpack:///mrz-tools/./src/index.js","webpack:///mrz-tools/./src/util/countries.js","webpack:///mrz-tools/./src/parse/parse.js","webpack:///mrz-tools/./src/parse/td1.js","webpack:///mrz-tools/./src/parse/utils.js","webpack:///mrz-tools/./src/parse/td3.js"],"names":[],"mappings":"AAAA,cACA,2BACA,uCACA,sCACA,cACA,GACA,0CAEA,eACA,GAAC,mBACD,kBCTA,cAMA,MACA,eAGA,mBACA,CACA,cACA,EAIA,kDAGA,KAGA,YACA,OAIA,IAzBA,iBA4BA,MAGA,MAGA,yBCtCA,CAGA,uBACA,OAGA,aAKA,CACA,YACA,oBANA,UACA,EAEA,eCXA,CAEA,kiKCFA,CAEA,qBACA,OAEA,wBAEA,eACA,WACA,WACA,YACA,OACA,GACA,UACA,OACA,GACA,MACA,gBAEA,+BACA,oBCpBA,CAEA,gBACA,CACA,QACA,YACA,eACA,YACA,WACC,yBAGD,wBACA,IACA,aACA,8BACA,yBACA,+CACA,yBACA,gDACA,yBACA,0CACA,sBACA,qBACA,QACA,YAEA,8BACA,6CACA,uBAEA,sCACA,uBACA,6CACA,2CACA,uBACA,oGAEA,iCAA2D,SAC3D,kCAA8D,SAE9D,WACA,uBACA,CACA,aAEA,oBC9CA,CAEA,4BAuCA,OACA,EACA,oBAAmB,MAAmB,WACtC,oBACA,cACA,cACA,eACA,WACA,MACA,CACA,gBACA,CAEA,WAlDA,aAuDA,CACA,QACA,yBANA,yDACA,IAEA,EAIA,wBA9BA,SACA,SACA,MACA,OAEA,EAEA,EAwBA,uBAxCA,IACA,kCACA,yBACA,uBACA,iBACA,GACA,CAEA,EAiCA,oBAnDA,OACA,4BACA,wBACA,cACA,MACA,QAEA,EAEA,EA2CA,iCA5DA,OACA,CACA,oBAEA,GAGA,mBCZA,CAEA,gBACA,CACA,QACA,YACA,eACA,YACA,WACC,yBAED,wBACA,IACA,aACA,8BACA,yBACA,+CACA,yBACA,2CACA,sBACA,qBACA,QACA,YAEA,8BACA,iCAA2D,SAC3D,kCAA8D,SAC9D,2CACA,2BACA,0CAEA,mBAEA,+CAEA,qBACA,cAEA,+DACA,oFAEA,WACA,uBACA,CACA,aAEA","file":"mrz-tools.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mrzTools\"] = factory();\n\telse\n\t\troot[\"mrzTools\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8735a93e0a6644039b71","'use strict';\n\n\nconst COUNTRIES = require('./util/countries');\nconst parse = require('./parse/parse');\n\n\nfunction parseMRZ(text) {\n    return parse(text);\n}\n\nmodule.exports = {\n    COUNTRIES,\n    parseMRZ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0","'use strict';\nconst COUNTRIES = {'ABW': 'Aruba', 'AFG': 'Afghanistan', 'AGO': 'Angola', 'AIA': 'Anguilla', 'ALA': 'Åland Islands', 'ALB': 'Albania', 'AND': 'Andorra', 'ARE': 'United Arab Emirates', 'ARG': 'Argentina', 'ARM': 'Armenia', 'ASM': 'American Samoa', 'ATA': 'Antarctica', 'ATF': 'French Southern Territories', 'ATG': 'Antigua and Barbuda', 'AUS': 'Australia', 'AUT': 'Austria', 'AZE': 'Azerbaijan', 'BDI': 'Burundi', 'BEL': 'Belgium', 'BEN': 'Benin', 'BES': 'Bonaire, Sint Eustatius and Saba', 'BFA': 'Burkina Faso', 'BGD': 'Bangladesh', 'BGR': 'Bulgaria', 'BHR': 'Bahrain', 'BHS': 'Bahamas', 'BIH': 'Bosnia and Herzegovina', 'BLM': 'Saint Barthélemy', 'BLR': 'Belarus', 'BLZ': 'Belize', 'BMU': 'Bermuda', 'BOL': 'Bolivia, Plurinational State of', 'BRA': 'Brazil', 'BRB': 'Barbados', 'BRN': 'Brunei Darussalam', 'BTN': 'Bhutan', 'BVT': 'Bouvet Island', 'BWA': 'Botswana', 'CAF': 'Central African Republic', 'CAN': 'Canada', 'CCK': 'Cocos (Keeling) Islands', 'CHE': 'Switzerland', 'CHL': 'Chile', 'CHN': 'China', 'CIV': \"Côte d'Ivoire\", 'CMR': 'Cameroon', 'COD': 'Congo, the Democratic Republic of the', 'COG': 'Congo', 'COK': 'Cook Islands', 'COL': 'Colombia', 'COM': 'Comoros', 'CPV': 'Cabo Verde', 'CRI': 'Costa Rica', 'CUB': 'Cuba', 'CUW': 'Curaçao', 'CXR': 'Christmas Island', 'CYM': 'Cayman Islands', 'CYP': 'Cyprus', 'CZE': 'Czechia', 'D': 'Germany', 'DEU': 'Germany', 'DJI': 'Djibouti', 'DMA': 'Dominica', 'DNK': 'Denmark', 'DOM': 'Dominican Republic', 'DZA': 'Algeria', 'ECU': 'Ecuador', 'EGY': 'Egypt', 'ERI': 'Eritrea', 'ESH': 'Western Sahara', 'ESP': 'Spain', 'EST': 'Estonia', 'ETH': 'Ethiopia', 'FIN': 'Finland', 'FJI': 'Fiji', 'FLK': 'Falkland Islands (Malvinas)', 'FRA': 'France', 'FRO': 'Faroe Islands', 'FSM': 'Micronesia, Federated States of', 'GAB': 'Gabon', 'GBD': 'British Overseas Territories Citizen (BOTC)', 'GBN': 'British National (Overseas)', 'GBO': 'British Overseas Citizen', 'GBP': 'British Protected Person', 'GBR': 'United Kingdom', 'GBS': 'British Subject', 'GEO': 'Georgia', 'GGY': 'Guernsey', 'GHA': 'Ghana', 'GIB': 'Gibraltar', 'GIN': 'Guinea', 'GLP': 'Guadeloupe', 'GMB': 'Gambia', 'GNB': 'Guinea-Bissau', 'GNQ': 'Equatorial Guinea', 'GRC': 'Greece', 'GRD': 'Grenada', 'GRL': 'Greenland', 'GTM': 'Guatemala', 'GUF': 'French Guiana', 'GUM': 'Guam', 'GUY': 'Guyana', 'HKG': 'Hong Kong', 'HMD': 'Heard Island and McDonald Islands', 'HND': 'Honduras', 'HRV': 'Croatia', 'HTI': 'Haiti', 'HUN': 'Hungary', 'IDN': 'Indonesia', 'IMN': 'Isle of Man', 'IND': 'India', 'IOT': 'British Indian Ocean Territory', 'IRL': 'Ireland', 'IRN': 'Iran, Islamic Republic of', 'IRQ': 'Iraq', 'ISL': 'Iceland', 'ISR': 'Israel', 'ITA': 'Italy', 'JAM': 'Jamaica', 'JEY': 'Jersey', 'JOR': 'Jordan', 'JPN': 'Japan', 'KAZ': 'Kazakhstan', 'KEN': 'Kenya', 'KGZ': 'Kyrgyzstan', 'KHM': 'Cambodia', 'KIR': 'Kiribati', 'KNA': 'Saint Kitts and Nevis', 'KOR': 'Korea, Republic of', 'KWT': 'Kuwait', 'LAO': \"Lao People's Democratic Republic\", 'LBN': 'Lebanon', 'LBR': 'Liberia', 'LBY': 'Libya', 'LCA': 'Saint Lucia', 'LIE': 'Liechtenstein', 'LKA': 'Sri Lanka', 'LSO': 'Lesotho', 'LTU': 'Lithuania', 'LUX': 'Luxembourg', 'LVA': 'Latvia', 'MAC': 'Macao', 'MAF': 'Saint Martin (French part)', 'MAR': 'Morocco', 'MCO': 'Monaco', 'MDA': 'Moldova, Republic of', 'MDG': 'Madagascar', 'MDV': 'Maldives', 'MEX': 'Mexico', 'MHL': 'Marshall Islands', 'MKD': 'Macedonia, the former Yugoslav Republic of', 'MLI': 'Mali', 'MLT': 'Malta', 'MMR': 'Myanmar', 'MNE': 'Montenegro', 'MNG': 'Mongolia', 'MNP': 'Northern Mariana Islands', 'MOZ': 'Mozambique', 'MRT': 'Mauritania', 'MSR': 'Montserrat', 'MTQ': 'Martinique', 'MUS': 'Mauritius', 'MWI': 'Malawi', 'MYS': 'Malaysia', 'MYT': 'Mayotte', 'NAM': 'Namibia', 'NCL': 'New Caledonia', 'NER': 'Niger', 'NFK': 'Norfolk Island', 'NGA': 'Nigeria', 'NIC': 'Nicaragua', 'NIU': 'Niue', 'NLD': 'Netherlands', 'NOR': 'Norway', 'NPL': 'Nepal', 'NRU': 'Nauru', 'NZL': 'New Zealand', 'OMN': 'Oman', 'PAK': 'Pakistan', 'PAN': 'Panama', 'PCN': 'Pitcairn', 'PER': 'Peru', 'PHL': 'Philippines', 'PLW': 'Palau', 'PNG': 'Papua New Guinea', 'POL': 'Poland', 'PRI': 'Puerto Rico', 'PRK': \"Korea, Democratic People's Republic of\", 'PRT': 'Portugal', 'PRY': 'Paraguay', 'PSE': 'Palestine, State of', 'PYF': 'French Polynesia', 'QAT': 'Qatar', 'REU': 'Réunion', 'ROU': 'Romania', 'RUS': 'Russian Federation', 'RWA': 'Rwanda', 'SAU': 'Saudi Arabia', 'SDN': 'Sudan', 'SEN': 'Senegal', 'SGP': 'Singapore', 'SGS': 'South Georgia and the South Sandwich Islands', 'SHN': 'Saint Helena, Ascension and Tristan da Cunha', 'SJM': 'Svalbard and Jan Mayen', 'SLB': 'Solomon Islands', 'SLE': 'Sierra Leone', 'SLV': 'El Salvador', 'SMR': 'San Marino', 'SOM': 'Somalia', 'SPM': 'Saint Pierre and Miquelon', 'SRB': 'Serbia', 'SSD': 'South Sudan', 'STP': 'Sao Tome and Principe', 'SUR': 'Suriname', 'SVK': 'Slovakia', 'SVN': 'Slovenia', 'SWE': 'Sweden', 'SWZ': 'Swaziland', 'SXM': 'Sint Maarten (Dutch part)', 'SYC': 'Seychelles', 'SYR': 'Syrian Arab Republic', 'TCA': 'Turks and Caicos Islands', 'TCD': 'Chad', 'TGO': 'Togo', 'THA': 'Thailand', 'TJK': 'Tajikistan', 'TKL': 'Tokelau', 'TKM': 'Turkmenistan', 'TLS': 'Timor-Leste', 'TON': 'Tonga', 'TTO': 'Trinidad and Tobago', 'TUN': 'Tunisia', 'TUR': 'Turkey', 'TUV': 'Tuvalu', 'TWN': 'Taiwan, Province of China', 'TZA': 'Tanzania, United Republic of', 'UGA': 'Uganda', 'UKR': 'Ukraine', 'UMI': 'United States Minor Outlying Islands', 'UNA': 'specialized agency of the United Nations', 'UNK': 'Resident of Kosovo issued byUNMIK', 'UNO': 'United Nations organization', 'URY': 'Uruguay', 'USA': 'United States of America', 'UZB': 'Uzbekistan', 'VAT': 'Holy See (Vatican City State)', 'VCT': 'Saint Vincent and the Grenadines', 'VEN': 'Venezuela, Bolivarian Republic of', 'VGB': 'Virgin Islands, British', 'VIR': 'Virgin Islands, U.S.', 'VNM': 'Viet Nam', 'VUT': 'Vanuatu', 'WLF': 'Wallis and Futuna', 'WSA': 'World Service Authority World Passport', 'WSM': 'Samoa', 'XOM': 'Sovereign Military Order of Malta', 'XXA': 'Stateless person', 'XXB': 'Refugee, as per the 1951 Convention', 'XXC': 'Refugee, other than defined above', 'XXX': 'Unspecified nationality', 'YEM': 'Yemen', 'ZAF': 'South Africa', 'ZMB': 'Zambia', 'ZWE': 'Zimbabwe'};\nmodule.exports = COUNTRIES;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/countries.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nvar parseTD1 = require('./td1');\nvar parseTD3 = require('./td3');\n\nmodule.exports = function parse(text) {\n    var logs = [];\n    var lines = text.split(/[\\r\\n]+/);\n    var result;\n    switch (lines.length) {\n        case 2:\n            result = parseTD3(lines);\n            break;\n        case 3:\n            result = parseTD1(lines);\n            break;\n        default:\n            logs.push('We need 2 or 3 lines');\n    }\n    return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/parse/parse.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar {\n    check,\n    parseText,\n    parseCountry,\n    parseDate,\n    parseSex,\n    parseDocumentNumber\n} = require('./utils');\n\n\nmodule.exports = function parseTD1(lines) {\n    var logs = [];\n    logs.push('Parsing TD1 format');\n    var first = lines[0];\n    if (first.length !== 30) logs.push('First line does not have 30 symbols');\n    var second = lines[1];\n    if (second.length !== 30) logs.push('Second line does not have 30 symbols');\n    var third = lines[2];\n    if (third.length !== 30) logs.push('Third line does not have 30 symbols');\n    var result = {};\n    result.format = 'TD3';\n    result.documentType = {\n        code: first[0],\n        type: parseText(first[1])\n    };\n    result.issuingCountry = parseCountry(parseText(first, 2, 5));\n    result.documentNumber = parseDocumentNumber(parseText(first, 5, 14), first.substr(14, 1));\n    result.optional1 = parseText(first, 15, 30);\n\n    result.birthDate = parseDate(parseText(second, 0, 6), second.substr(6, 1));\n    result.sex = parseSex(second.substr(7, 1));\n    result.expirationDate = parseDate(parseText(second, 8, 14), second.substr(14, 1));\n    result.nationality = parseCountry(parseText(second, 15, 18), second.substr(18, 1));\n    result.optional2 = parseText(second, 18, 29);\n    result.isValid = check(first.substring(5, 30) + second.substring(0, 7) + second.substring(8, 15) + second.substring(18, 29), second.substr(29, 1));\n\n    result.lastname = parseText(third, 0, 30).replace(/ {2}.*/, '');\n    result.firstname = parseText(third, 0, 30).replace(/.* {2}/, '');\n\n    logs.push('TD1 parse completed');\n    return {\n        logs,\n        value: result\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/parse/td1.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nconst COUNTRIES = require('../util/countries');\n\nfunction parseDocumentNumber(value, checkDigit) {\n    return {\n        value,\n        isValid: check(value, checkDigit)\n    };\n}\n\n\nfunction parseSex(value) {\n    var label = 'Unknown';\n    if (value === 'M') label = 'Masculin';\n    if (value === 'F') label = 'Féminin';\n    return {\n        code: value,\n        label: label\n    };\n}\n\nfunction parseDate(value, checkDigit) {\n    var result = {};\n    result.year = value.substring(0, 2);\n    result.month = value.substring(2, 4);\n    result.day = value.substring(4, 6);\n    result.isValid = check(value, checkDigit);\n    return result;\n}\n\nfunction parseCountry(value) {\n    var country = COUNTRIES[value];\n    return {\n        code: value,\n        name: country\n    };\n}\n\nfunction check(string, value) {\n\n    var code = 0;\n    var factors = [7, 3, 1];\n    for (var i = 0; i < string.length; i++) {\n        var charCode = string.charCodeAt(i);\n        if (charCode === 60) charCode = 0;\n        if (charCode >= 65) charCode -= 55;\n        if (charCode >= 48) charCode -= 48;\n        charCode *= factors[i % 3];\n        code += charCode;\n    }\n    return code % 10 === Number(value);\n}\n\nfunction parseText(text, from, to) {\n    return text.substring(from, to).replace(/<+$/g, '').replace(/</g, ' ');\n}\n\nmodule.exports = {\n    check,\n    parseText,\n    parseCountry,\n    parseDate,\n    parseSex,\n    parseDocumentNumber\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/parse/utils.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nvar {\n    check,\n    parseText,\n    parseCountry,\n    parseDate,\n    parseSex,\n    parseDocumentNumber\n} = require('./utils');\n\nmodule.exports = function parseTD3(lines) {\n    var logs = [];\n    logs.push('Parsing TD3 format');\n    var first = lines[0];\n    if (first.length !== 44) logs.push('First line does not have 44 symbols');\n    var second = lines[1];\n    if (second.length !== 44) logs.push('Second line does not have 44 symbols');\n    var result = {};\n    result.format = 'TD3';\n    result.documentType = {\n        code: first[0],\n        type: parseText(first[1])\n    };\n    result.issuingCountry = parseCountry(parseText(first, 2, 5));\n    result.lastname = parseText(first, 5, 50).replace(/ {2}.*/, '');\n    result.firstname = parseText(first, 5, 50).replace(/.* {2}/, '');\n    result.documentNumber = parseDocumentNumber(parseText(second, 0, 9), second.substr(9, 1));\n    result.nationality = parseCountry(parseText(second, 10, 13));\n    result.birthDate = parseDate(parseText(second, 13, 19), second.substr(19, 1));\n\n    result.sex = parseSex(parseText(second, 20, 21));\n\n    result.expirationDate = parseDate(parseText(second, 21, 27), second.substr(27, 1));\n\n    result.personalNumber = {\n        value: parseText(second, 28, 42)\n    };\n    result.personalNumber.isValid = check(second.substring(28, 42), second.substr(42, 1));\n    result.isValid = check(second.substring(0, 10) + second.substring(13, 20) + second.substring(21, 43), second.substr(43, 1));\n\n    logs.push('TD3 parse completed');\n    return {\n        logs,\n        value: result\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/parse/td3.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}